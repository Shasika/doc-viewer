import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,f as t,o as s}from"./app-3r34FGDr.js";const n={};function o(r,e){return s(),i("div",null,e[0]||(e[0]=[t(`<h1 id="✅-conventional-commits-complete-developer-guide" tabindex="-1"><a class="header-anchor" href="#✅-conventional-commits-complete-developer-guide"><span>✅ Conventional Commits: Complete Developer Guide</span></a></h1><p><strong>Conventional Commits</strong> is a lightweight commit message convention that standardizes how commit messages are written across teams and projects. It is especially useful for automating versioning (using SemVer), generating changelogs, and streamlining collaboration.</p><p>📘 Official Spec: <a href="https://www.conventionalcommits.org/en/v1.0.0" target="_blank" rel="noopener noreferrer">conventionalcommits.org</a></p><hr><h2 id="🚀-why-use-conventional-commits" tabindex="-1"><a class="header-anchor" href="#🚀-why-use-conventional-commits"><span>🚀 Why Use Conventional Commits?</span></a></h2><ul><li>📦 Automate changelog generation</li><li>🔢 Enable semantic versioning (SemVer)</li><li>👥 Improve readability and traceability of commit history</li><li>⚙️ Integrate with tools like <code>commitlint</code>, <code>semantic-release</code>, <code>standard-version</code>, and <code>Husky</code></li></ul><hr><h2 id="📐-basic-commit-message-format" tabindex="-1"><a class="header-anchor" href="#📐-basic-commit-message-format"><span>📐 Basic Commit Message Format</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>&lt;type&gt;[optional scope][!]: &lt;description&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional body]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional footer(s)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🧩-elements" tabindex="-1"><a class="header-anchor" href="#🧩-elements"><span>🧩 Elements</span></a></h3><table><thead><tr><th>Element</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><code>type</code></td><td>✅</td><td>Type of change (feature, fix, etc.)</td></tr><tr><td><code>scope</code></td><td>🔁</td><td>A contextual label (e.g., <code>api</code>, <code>auth</code>)</td></tr><tr><td><code>!</code></td><td>🔁</td><td>Indicates breaking change</td></tr><tr><td><code>description</code></td><td>✅</td><td>Short summary of change</td></tr><tr><td><code>body</code></td><td>🔁</td><td>Longer explanation (if needed)</td></tr><tr><td><code>footer</code></td><td>🔁</td><td>Metadata like <code>BREAKING CHANGE</code> or <code>Closes #123</code></td></tr></tbody></table><hr><h2 id="🔠-commit-types-examples" tabindex="-1"><a class="header-anchor" href="#🔠-commit-types-examples"><span>🔠 Commit Types &amp; Examples</span></a></h2><h3 id="_1-feat-—-new-feature" tabindex="-1"><a class="header-anchor" href="#_1-feat-—-new-feature"><span>1. <code>feat</code> — New Feature</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>feat(auth): add OTP-based login support</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Adds a new user-facing feature.</p><hr><h3 id="_2-fix-—-bug-fix" tabindex="-1"><a class="header-anchor" href="#_2-fix-—-bug-fix"><span>2. <code>fix</code> — Bug Fix</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>fix(payment): resolve duplicate transaction issue</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Corrects a bug without introducing new features.</p><hr><h3 id="_3-docs-—-documentation-changes" tabindex="-1"><a class="header-anchor" href="#_3-docs-—-documentation-changes"><span>3. <code>docs</code> — Documentation Changes</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>docs(readme): add API usage examples</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>For updates to <code>.md</code> files, inline comments, or changelogs.</p><hr><h3 id="_4-style-—-code-style-changes-no-logic-impact" tabindex="-1"><a class="header-anchor" href="#_4-style-—-code-style-changes-no-logic-impact"><span>4. <code>style</code> — Code Style Changes (No Logic Impact)</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>style(ui): format sidebar component with Prettier</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Changes code formatting without affecting behavior.</p><hr><h3 id="_5-refactor-—-code-refactoring" tabindex="-1"><a class="header-anchor" href="#_5-refactor-—-code-refactoring"><span>5. <code>refactor</code> — Code Refactoring</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>refactor(user): extract auth logic into separate service</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Improves code structure without changing external behavior.</p><hr><h3 id="_6-perf-—-performance-improvements" tabindex="-1"><a class="header-anchor" href="#_6-perf-—-performance-improvements"><span>6. <code>perf</code> — Performance Improvements</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>perf(image): optimize loading of homepage banner</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Boosts performance or efficiency.</p><hr><h3 id="_7-test-—-test-related-changes" tabindex="-1"><a class="header-anchor" href="#_7-test-—-test-related-changes"><span>7. <code>test</code> — Test-Related Changes</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>test(api): add unit tests for quote endpoint</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Adds or updates test files (unit, integration, e2e).</p><hr><h3 id="_8-chore-—-miscellaneous-maintenance" tabindex="-1"><a class="header-anchor" href="#_8-chore-—-miscellaneous-maintenance"><span>8. <code>chore</code> — Miscellaneous Maintenance</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>chore(env): update .env.example file</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Doesn&#39;t modify src or test code — like updating configs, linters, CI files.</p><hr><h3 id="_9-build-—-build-system-updates" tabindex="-1"><a class="header-anchor" href="#_9-build-—-build-system-updates"><span>9. <code>build</code> — Build System Updates</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>build(deps): upgrade Laravel to 11.x</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Changes that affect build tools, dependencies, or bundlers.</p><hr><h3 id="_10-ci-—-continuous-integration" tabindex="-1"><a class="header-anchor" href="#_10-ci-—-continuous-integration"><span>10. <code>ci</code> — Continuous Integration</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>ci(github): add test matrix for multiple PHP versions</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Updates to CI/CD config files like GitHub Actions or CircleCI.</p><hr><h3 id="_11-breaking-change-—-introduces-breaking-change" tabindex="-1"><a class="header-anchor" href="#_11-breaking-change-—-introduces-breaking-change"><span>11. <code>BREAKING CHANGE</code> — Introduces Breaking Change</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>feat!: drop support for legacy API authentication</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BREAKING CHANGE: login endpoint now requires multi-factor authentication.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Either use <code>!</code> after the <code>type</code> or include a <code>BREAKING CHANGE:</code> footer.</p><hr><h2 id="🧠-best-practices" tabindex="-1"><a class="header-anchor" href="#🧠-best-practices"><span>🧠 Best Practices</span></a></h2><ul><li>✅ Use present tense: &quot;add feature&quot; not &quot;added&quot;</li><li>🎯 Keep subject under 72 characters</li><li>🧩 Use <code>scope</code> to clarify the module/context</li><li>❗ Use <code>!</code> for breaking changes or <code>BREAKING CHANGE:</code> footer</li><li>💬 Use bodies to explain &quot;why&quot;, not just &quot;what&quot;</li></ul><hr><h2 id="🔧-tooling-support" tabindex="-1"><a class="header-anchor" href="#🔧-tooling-support"><span>🔧 Tooling Support</span></a></h2><table><thead><tr><th>Tool</th><th>Description</th></tr></thead><tbody><tr><td><code>commitlint</code></td><td>Lint commit messages</td></tr><tr><td><code>semantic-release</code></td><td>Automate changelog + versioning</td></tr><tr><td><code>standard-version</code></td><td>Versioning without CI integration</td></tr><tr><td><code>husky</code></td><td>Run hooks (like linting before commit)</td></tr></tbody></table><hr><h2 id="🧪-real-world-commit-examples" tabindex="-1"><a class="header-anchor" href="#🧪-real-world-commit-examples"><span>🧪 Real-World Commit Examples</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>feat(manage-users): add marketing preference keys</span></span>
<span class="line"><span>fix(api): add missing catch point to payload</span></span>
<span class="line"><span>chore(deps): update dependency versions</span></span>
<span class="line"><span>docs(changelog): document changes for v2.3.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📚-references" tabindex="-1"><a class="header-anchor" href="#📚-references"><span>📚 References</span></a></h2><ul><li><a href="https://www.conventionalcommits.org/" target="_blank" rel="noopener noreferrer">Conventional Commits Specification</a></li><li><a href="https://semver.org/" target="_blank" rel="noopener noreferrer">Semantic Versioning</a></li><li><a href="https://commitlint.js.org/" target="_blank" rel="noopener noreferrer">Commitlint Config</a></li><li><a href="https://semantic-release.gitbook.io/semantic-release/" target="_blank" rel="noopener noreferrer">semantic-release Docs</a></li></ul><hr><blockquote><p>🧑‍💻 <em>“Conventional commits make your history readable, your releases automated, and your team aligned.”</em></p></blockquote>`,70)]))}const c=a(n,[["render",o]]),h=JSON.parse('{"path":"/tech-docs/git/conventional-commits.html","title":"Conventional Commits","lang":"en-US","frontmatter":{"title":"Conventional Commits","icon":"mdi:git","description":"✅ Conventional Commits: Complete Developer Guide Conventional Commits is a lightweight commit message convention that standardizes how commit messages are written across teams a...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Conventional Commits\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-19T11:00:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Shasika\\",\\"url\\":\\"#\\"}]}"],["meta",{"property":"og:url","content":"https://shasika.github.io/doc-viewer/doc-viewer/tech-docs/git/conventional-commits.html"}],["meta",{"property":"og:site_name","content":"Tech World"}],["meta",{"property":"og:title","content":"Conventional Commits"}],["meta",{"property":"og:description","content":"✅ Conventional Commits: Complete Developer Guide Conventional Commits is a lightweight commit message convention that standardizes how commit messages are written across teams a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-19T11:00:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-19T11:00:30.000Z"}]]},"git":{"createdTime":1752854125000,"updatedTime":1752922830000,"contributors":[{"name":"Shasika Madhushan","username":"","email":"shasikamadushan555@gmail.com","commits":2}]},"readingTime":{"minutes":1.67,"words":501},"filePathRelative":"tech-docs/git/conventional-commits.md","autoDesc":true}');export{c as comp,h as data};
